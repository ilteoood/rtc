/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum ChunkStrategy {
  Paragraph = 0
}
export interface SplitOptions {
  chunkSize?: number
  chunkOverlap?: number
  lengthFunction?: LengthFunction
  chunkStrategy?: ChunkStrategy
}
export interface ChunkResult {
  text: Array<string>
  start: number
  end: number
}
export declare function getChunk(text: Array<string>, start?: number | undefined | null, end?: number | undefined | null): Array<string>
export declare function iterateChunks(text: Array<string>, splitOptions?: SplitOptions | undefined | null): ChunkIterator
export declare function split(text: Array<string>, splitOptions?: SplitOptions | undefined | null): Array<ChunkResult>
export declare class ChunkIterator {
  [Symbol.iterator](): Iterator<ChunkResult, void, void>
}
